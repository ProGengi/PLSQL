#
#
#
#
#

函数语法：
Analytic(arg1,arg2,..)over(analytic_clause)
Analytic是函数名称,如max，min等.
arg1,arg2是函数的参数
over是分析函数的关键词，即使后面analytic_clause没有括号也不能省略
analytic_clause用来确定分析函数的操作规则，如
  query_partition_clasue 可以看做group by
  order_by_clause 可以看做order by
  windowing_clause数据记录集窗口范围，必须依赖于order_by_clause而存在。
    rows 指定物理行,通过自身位置来找到相应的行 /range 指定窗口由偏移量构成，通过某种条件来寻找行。
    between  and 用来指定窗口的起始点和终点
    unbounded preceding 指明窗口的起始点是分组的第一行
    current row 作为起始点，窗口的开始于当前行，作为终点，窗口结束于当前行
    unbounded following 指明窗口结束于分组的最后一行
    value_expr 偏移量表达式
  如果不指定记录窗口，则表示从当前行到结束
  
  rows between unbounded preceding and unbounded following --窗口开始于分组第一行，结束于分组最后一行
  rows [between] unbounded preceding [and current row] --窗口开始于分组第一行，结束于当前行
  rows between unbounded preceding and value_expr preceding/following --窗口开始于分组第一行，结束于当前行的前/后expr行
  
   range窗口
    相当于给over中的order by加了一个where条件
    

max/min 在一个组中的数据窗口中查找表达式的最大/小值 
avg  累计平均值
sum  累计值！！！！！！！！！ 
count

语法例子：
select max(sal)over(partition by deptno order by empno) from emp;

rank 排序相同名次，有跳号 1224
dense_rank 相同名次无跳号 1223
row_number 相同名次依次排 1234

select row_number()over(partition by deptno order by empno) rn from emp;

first 从dense_rank中返回最前面的行
first_value 返回数据窗口中第一个值,作用可与min相同
last 从dense_rank中返回最后面值的行
last_value 返回数据窗口中最后一个值,作用可与max相同

lag/lead 返回当前行之前/后的行
lag(name) = lag(name,1,null) = lag(name,1)
SQL> select *  from kkk;                                          
                                                                  
        ID NAME                                                   
---------- --------------------                                   
         1 1name                                                  
         2 2name                                                  
         3 3name                                                  
         4 4name                                                  
         5 5name                                                  
SQL> select id,name,lag(name,1,0) over(order by id) from kkk; 
                                                                  
        ID NAME                 LAG(NAME,1,0)OVER(ORDERBYID)      
---------- -------------------- ----------------------------      
         1 1name                0                                 
         2 2name                1name                             
         3 3name                2name                             
         4 4name                3name                             
         5 5name                4name

SQL> select id,name,lead(name,1,0) over(order by id) from kkk;
                                                                  
        ID NAME                 LEAD(NAME,1,0)OVER(ORDERBYID)     
---------- -------------------- -----------------------------     
         1 1name                2name                             
         2 2name                3name                             
         3 3name                4name                             
         4 4name                5name                             
         5 5name                0

SQL> select id,name,lead(name,2,0) over(order by id) from kkk;                                                                                                               
        ID NAME                 LEAD(NAME,2,0)OVER(ORDERBYID)     
---------- -------------------- -----------------------------     
         1 1name                3name                             
         2 2name                4name                             
         3 3name                5name                             
         4 4name                0                                 
         5 5name                0  
SQL> select id,name,lead(name,1,'linjiqin') over(order by id) from kkk;                                  
                                                                                  
        ID NAME                 LEAD(NAME,1,'ALSDFJLASDJFSAF')                    
---------- -------------------- ------------------------------                    
         1 1name                2name                                             
         2 2name                3name                                             
         3 3name                4name                                             
         4 4name                5name                                             
         5 5name                linjiqin  



连续号码段的问题
id   value
1    100
1    101
1    102
1    103
1    106
1    107
1    108
2    101
2    102
2    103

要求输出结果
1  100  103
1  106  108
2  101  103

select max(id),min(value),max(value)
from t
group by value-rownum
--使用这种方法时，数据一定是要有序的，按照id，value排序

列转行函数：listagg：
with temp as(    
select 'China' nation ,'Guangzhou' city from dual union all    
select 'China' nation ,'Shanghai' city from dual union all    
select 'China' nation ,'Beijing' city from dual union all    
select 'USA' nation ,'New York' city from dual union all    
select 'USA' nation ,'Bostom' city from dual union all    
select 'Japan' nation ,'Tokyo' city from dual     
)    
select nation,listagg(city,',') within GROUP (order by city)  as Cities  
from temp    
group by nation 

result：
nation   city
china    Guangzhou,Shanghai,Beijing
USA      NewYork,Bostom
Japan    Tokyo

select nation,wm_concat(city) city from temp group by nation;同样可以达到上面的效果
--------------------------------------------------------------------------------------------------------------------

-------------------------------------------------------------------------------------------------------------------
分析函数中，加order by与不加的区别
select ename,deptno,  
wm_concat(ename) over (partition by deptno) emp_list  
from emp;  
  
ENAME          DEPTNO EMP_LIST  
---------- ---------- ----------------------------------------  
CLARK              10 CLARK,KING,MILLER  
KING               10 CLARK,KING,MILLER  
MILLER             10 CLARK,KING,MILLER  
JONES              20 JONES,FORD,ADAMS,SMITH,SCOTT  
FORD               20 JONES,FORD,ADAMS,SMITH,SCOTT  
ADAMS              20 JONES,FORD,ADAMS,SMITH,SCOTT  
SMITH              20 JONES,FORD,ADAMS,SMITH,SCOTT  
SCOTT              20 JONES,FORD,ADAMS,SMITH,SCOTT  
WARD               30 WARD,TURNER,ALLEN,JAMES,BLAKE,MARTIN  
TURNER             30 WARD,TURNER,ALLEN,JAMES,BLAKE,MARTIN  
ALLEN              30 WARD,TURNER,ALLEN,JAMES,BLAKE,MARTIN  
JAMES              30 WARD,TURNER,ALLEN,JAMES,BLAKE,MARTIN  
BLAKE              30 WARD,TURNER,ALLEN,JAMES,BLAKE,MARTIN  
MARTIN             30 WARD,TURNER,ALLEN,JAMES,BLAKE,MARTIN  

select ename,deptno,  
wm_concat(ename) over (partition by deptno order by ename) emp_list  
from emp;  
  
ENAME          DEPTNO EMP_LIST  
---------- ---------- ----------------------------------------  
CLARK              10 CLARK  
KING               10 CLARK,KING  
MILLER             10 CLARK,KING,MILLER  
ADAMS              20 ADAMS  
FORD               20 ADAMS,FORD  
JONES              20 ADAMS,FORD,JONES  
SCOTT              20 ADAMS,FORD,JONES,SCOTT  
SMITH              20 ADAMS,FORD,JONES,SCOTT,SMITH  
ALLEN              30 ALLEN  
BLAKE              30 ALLEN,BLAKE  
JAMES              30 ALLEN,BLAKE,JAMES  
MARTIN             30 ALLEN,BLAKE,JAMES,MARTIN  
TURNER             30 ALLEN,BLAKE,JAMES,MARTIN,TURNER  
WARD               30 ALLEN,BLAKE,JAMES,MARTIN,TURNER,WARD  
