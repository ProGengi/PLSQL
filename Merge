#
#
#
#
#

使用merge实现 存在就update，不存在就insert的逻辑。

基本语法：
MERGE INTO TABLE_NAME
USING TABLE_NAME2
ON TABLE.ID=TABLE2.ID
WHEN MATCHED THEN
UPDATE/DELETE
WHEN NOT MATCHED THEN
INSERT;

FAQ
Q:无法在源表获得一组稳定的行(on 后面的条件出现满足多个结果的情况)用A表去更新B表，但是A表却有多行结果。
  如果目标表出现多行不会报错但是全部新。如果原表出现多行能够匹配上，会出现ORA-30926错误。
A:用主键关联。

merge是无法跟新on中引用的列。

DELETE子句只能删除目标表，不能删除源表。

merge into t1
using t2
on t1.id=t2.id
when matched then 
update 
set t2.name=t1.name
delete where T1.ID=xxxx --只会删除t1表中的数据

*****************************************
T表中的数据：
id    value
1       a
2       b

用一条sql把两个值交换一下：
merge into t
using (
select 1 id,(select value from t where id =2) as value from dual
union all
select 2,(select value from t where id =1) from dual
) s
on (t.id=s.id)
when matched then 
update
set t.value=s.value;



查询：
with t as
(
select 1 id,(select value from t where id =2) as value from dual
union all
select 2,(select value from t where id =1) from dual
)
select * from t;
******************************************


insert
 oracle有两种插入方法：快速跟慢速，普通插入的就是慢速插入。
 快速插入是指，直接从高水位线往后插入，而不必查找已有块中是否有空余的空间。
 insert /*+ append */ into emp select * from emp3;
 insert /*+ append_values */ into dual(dummy) values('Y'); --插入单个值时使用append_values，快速插入永远是为了插入大量的数据而使用的
 
 快速插入的问题：
  1.在任何时间内，一张表只能有一个直接路径写入。
  2.数据只能在高水位线之上，这会导致空间浪费。
  3.在开始之后进行插入的会话不能对表进行任何操作(包括select)，知道提交或者回滚。
  
 多表插入：
  insert all
   into emp1(....)
    values (...)
   into emp2(...)
    values(...)
   select ... from emp;
 条件插入：
  insert all
   when 1=1 then 
   into emp1(...) values(....)
   when id is not null then 
   into emp2(...) values(....)
  select * from emp;
 
 update
  一张表里的大量数据时可以使用create table as (CTAS)代替。
  
 delete
  大量删除，也可以使用CTAS。
  truncate，是一条ddl语句，会隐式提交，一旦截断就不能还原了。不能闪回到表截断之前的状态。一张表只能全部截断或者不截断。
  
  
  
  
