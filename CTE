#
#
#
#
#

--公用表表达式(cte)
with tt as (select * from emp)
select * from tt;
注意事项：
cte之后必须紧跟使用cte的SQL语句(select,insert,update),否则cte将失效。
cte之后可跟多个cte，使用逗号隔开。
如果cte表达式的名称与表或视图的名称相同，使用时，仍然使用的是cte。
cte可以引用自身。

select * from emp where empname in (select deptno from dept where deptname = 'LOS');
改写成：
with tt as 
(select deptno from dept where deptname = 'Los')
select * from emp where empno in (select * from tt)




递归with查询语法
with 
query_name --子查询的名称，必须把所有列都写出来
as (subquery) --该部分就是查询语句，递归就写在这里。
select * from ..

with t(empno,ename,job)
as
(select empno,ename,job from emp
 union all
 select empno,ename,job from t ,emp e  where e.empno=t.empno
)
select * from t;


--列子
with emps (employee_id, name, job_id, salary, lvl) as (  
  select employee_id, first_name || ', '|| last_name name, job_id, salary, 1 as lvl  
  from employees  
  where manager_id is null  
  union all  
  select emp.employee_id, emp.first_name || ', '|| emp.last_name, emp.job_id, emp.salary, root.lvl + 1  
  from employees emp, emps root  
  where emp.manager_id=root.employee_id  
)  
select * from emps;
--等同于
select emp.employee_id, emp.first_name || ', '|| emp.last_name name, emp.job_id, emp.salary, level  
from employees emp  
start with manager_id is null  
connect by prior employee_id=manager_id; 


关于connect by
当使用connect by 有where条件时，where条件的作用在connect by 之后过滤。start with指定树的根。

connect 逻辑读比with小，性能好，但是connect不是ansi sql。

http://www.itpub.net/thread-1376651-1-1.html
